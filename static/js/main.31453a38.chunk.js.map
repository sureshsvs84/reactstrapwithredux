{"version":3,"sources":["App.js","components/ApplicationComponent/userDataList/userDataListReducer.js","components/ApplicationComponent/post/postDataList/postReducer.js","components/ApplicationComponent/rootApplicationReducer.js","rootReducer.js","store.js","serviceWorker.js","index.js","constants/actionType.js"],"names":["Layout","React","lazy","Promise","all","__webpack_require__","e","then","bind","Login","BlankPage","Register","Page404","Page500","IdleFlag","props","react_default","a","createElement","Fragment","Modal","isOpen","idleAutoFlag","className","ModalHeader","ModalBody","ModalFooter","Button","color","onClick","onHandleClickYes","onHandleClickNo","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","clearTimer","window","clearTimeout","autoClooseTime","clearInterval","waringTimeOut","count","IDLE_COUNT","resetIdleTime","history","location","pathname","startTimer","JSON","parse","localStorage","getItem","setInterval","idleWaring","browserTabActive","document","hidden","setState","setItem","setTimeout","push","AUTO_CLOSE_WAITING_TIME","state","events","forEach","eventName","addEventListener","Suspense","fallback","react_router","exact","path","name","render","App_IdleFlag","Component","withRouter","initialState","userDataList","postDataList","combineReducers","UserDataListReducer","arguments","length","undefined","action","type","data","userListActionType","ADD_USERLIST","objectSpread","UPDATE_USERLIST","DELETE_USERLIST","FETCH_USERLIST","PostReducer","postActionType","ADD_POSTLIST","UPDATE_POSTLIST","DELETE_POSTLIST","FETCH_POSTLIST","FETCH_POSTDETAILS","postDataDetails","FETCH_COMMENTS","postDetailsComments","rootApplicationReducer","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","apply","Boolean","hostname","match","dotenv","config","ReactDOM","react_router_dom","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","d","__webpack_exports__"],"mappings":"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","file":"static/js/main.31453a38.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { HashRouter, Route, Switch, withRouter } from 'react-router-dom';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\n// import { renderRoutes } from 'react-router-config';\r\nimport './App.scss';\r\n\r\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\r\n\r\n// Containers\r\nconst Layout = React.lazy(() => import('./containers/DefaultLayout'));\r\n\r\n// Pages\r\nconst Login = React.lazy(() => import('./views/Pages/Login'));\r\nconst BlankPage = React.lazy(() => import('./views/Pages/BlankPage'));\r\nconst Register = React.lazy(() => import('./views/Pages/Register'));\r\nconst Page404 = React.lazy(() => import('./views/Pages/Page404'));\r\nconst Page500 = React.lazy(() => import('./views/Pages/Page500'));\r\nexport const IdleFlag = (props) => {\r\n  return (\r\n    <>\r\n      <Modal isOpen={props.idleAutoFlag} className={props.className}>\r\n        <ModalHeader>Modal title</ModalHeader>\r\n        <ModalBody>\r\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n          </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={props.onHandleClickYes}>onHandleClickYes</Button>{' '}\r\n          <Button color=\"secondary\" onClick={props.onHandleClickNo}>No</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      idleAutoFlag: false\r\n    }\r\n    this.IDLE_COUNT = 1800; //Idle Waiting Time in Seconds\r\n    this.AUTO_CLOSE_WAITING_TIME = 60000 // autoClose Waiting time in milliseconds \r\n    //Browser Idle \r\n    this.events = [\r\n      \"load\",\r\n      \"click\",\r\n      \"scroll\",\r\n      \"keypress\"\r\n    ];\r\n    this.events.forEach(eventName => {\r\n      window.addEventListener(eventName, this.resetIdleTime, false);\r\n    });\r\n    document.addEventListener(\"visibilitychange\", this.browserTabActive, false);\r\n    this.startTimer();\r\n  }\r\n  clearTimer = () => {\r\n    window.clearTimeout(this.autoClooseTime);\r\n    window.clearInterval(this.waringTimeOut);\r\n    this.count = this.IDLE_COUNT;\r\n  }\r\n  resetIdleTime = () => {\r\n    if (!(this.props.history.location.pathname == \"/login\")) {\r\n      this.clearTimer();\r\n      this.startTimer();\r\n    }\r\n  }\r\n  startTimer = () => {\r\n    if (!(this.props.history.location.pathname == \"/login\")) {\r\n      const idleFlag = JSON.parse(localStorage.getItem('idleFlag'));\r\n      if (!(idleFlag)) {     \r\n        this.waringTimeOut = window.setInterval(this.idleWaring, 1000);\r\n      }\r\n    }\r\n  }\r\n  browserTabActive = () => {\r\n    if (!(document.hidden)) {    \r\n      if (!(this.props.history.location.pathname == \"/login\")) {\r\n        const idleFlag = JSON.parse(localStorage.getItem('idleFlag'));\r\n        if (idleFlag) {      \r\n          this.clearTimer();\r\n          this.setState({ idleAutoFlag: true });\r\n        } else {\r\n          this.setState({ idleAutoFlag: false });\r\n          this.clearTimer();\r\n          this.startTimer();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  idleWaring = () => {\r\n    this.count--;   \r\n    if (this.count === 0) {\r\n      localStorage.setItem('idleFlag', true);\r\n      this.setState({ idleAutoFlag: true });\r\n      this.clearTimer();\r\n      this.autoClooseTime = setTimeout(() => {       \r\n        localStorage.setItem('idleFlag', false);\r\n        this.setState({ idleAutoFlag: false });\r\n        this.clearTimer();\r\n        this.props.history.push('/login');\r\n      }, this.AUTO_CLOSE_WAITING_TIME);\r\n    }\r\n  }\r\n  onHandleClickYes = (e) => {    \r\n    localStorage.setItem('idleFlag', false);\r\n    this.setState({ idleAutoFlag: false });\r\n    this.clearTimer();\r\n    this.startTimer();\r\n\r\n  }\r\n  onHandleClickNo = () => {   \r\n    localStorage.setItem('idleFlag', false);\r\n    this.setState({ idleAutoFlag: false });\r\n    this.clearTimer();\r\n    this.props.history.push('/login');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <React.Suspense fallback={loading()}>\r\n        <Switch>\r\n          <Route exact path=\"/login\" name=\"Login Page\" render={props => <Login {...props} />} />\r\n          <Route exact path=\"/register\" name=\"Register Page\" render={props => <Register {...props} />} />\r\n          <Route exact path=\"/blankPage\" name=\"Blank Page\" render={props => <BlankPage {...props} />} />\r\n          <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props} />} />\r\n          <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props} />} />\r\n          <Route path=\"/\" name=\"Home\" render={props => <Layout {...props} />} />\r\n        </Switch>\r\n        {<IdleFlag idleAutoFlag={this.state.idleAutoFlag} onHandleClickYes={this.onHandleClickYes} onHandleClickNo={this.onHandleClickNo}></IdleFlag>}\r\n      </React.Suspense>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","import { userListActionType } from '../../../constants/actionType';\r\nconst initialState={\r\n        userDataList:[]\r\n}\r\nexport const UserDataListReducer = (state = initialState, action) => {\r\n    const { type, data } = action;\r\n    switch (type) {\r\n        case userListActionType.ADD_USERLIST:\r\n            state = {\r\n                ...state,\r\n                userDataList:data              \r\n            };\r\n            return state;\r\n      \r\n        case userListActionType.UPDATE_USERLIST:\r\n            state = {\r\n                ...state,\r\n               \r\n            };\r\n            return state;\r\n        \r\n        case userListActionType.DELETE_USERLIST:\r\n                state = {\r\n                    ...state,              \r\n                };\r\n                return state;\r\n        case userListActionType.FETCH_USERLIST:\r\n            state = {\r\n                ...state,\r\n                userDataList:data\r\n            };\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { postActionType } from '../../../../constants/actionType';\r\nconst initialState={\r\n        postDataList:[]\r\n}\r\nexport const PostReducer = (state = initialState, action) => {\r\n    const { type, data } = action;\r\n    switch (type) {\r\n        case postActionType.ADD_POSTLIST:\r\n            state = {\r\n                ...state,\r\n                postDataList:data              \r\n            };\r\n            return state;\r\n      \r\n        case postActionType.UPDATE_POSTLIST:\r\n            state = {\r\n                ...state,\r\n               \r\n            };\r\n            return state;\r\n        \r\n        case postActionType.DELETE_POSTLIST:\r\n                state = {\r\n                    ...state,              \r\n                };\r\n                return state;\r\n        case postActionType.FETCH_POSTLIST:\r\n            state = {\r\n                ...state,\r\n                postDataList:data\r\n            };\r\n            return state;\r\n        case postActionType.FETCH_POSTDETAILS:\r\n            state = {\r\n                ...state,\r\n                postDataDetails: data\r\n            };\r\n            return state;\r\n        case postActionType.FETCH_COMMENTS:\r\n            state = {\r\n                ...state,\r\n                postDetailsComments: data\r\n            };\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { UserDataListReducer } from '../ApplicationComponent/userDataList/userDataListReducer';\r\nimport { PostReducer } from './post/postDataList/postReducer';\r\nexport default combineReducers({\r\n    UserDataListReducer,\r\n    PostReducer\r\n});","import { combineReducers } from 'redux';\r\nimport rootApplicationReducer from './components/ApplicationComponent/rootApplicationReducer';\r\n/*\r\n * We combine all reducers into a single object before updated data is dispatched (sent) to store\r\n * Need to get the combined reducer\r\n * our entire applications state (store) is just whatever gets returned from all your reducers\r\n * */\r\nexport default combineReducers({\r\n    rootApplicationReducer   \r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst middleware = [ thunk ];\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './store';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\nReactDOM.render(<BrowserRouter>\r\n<Provider store={store}>\r\n    <App />\r\n</Provider>\r\n</BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const userListActionType = {\r\n    ADD_USERLIST: 'ADD_USERLIST',\r\n    UPDATE_USERLIST: 'UPDATE_USERLIST',\r\n    DELETE_USERLIST:'DELETE_USERLIST',\r\n    FETCH_USERLIST:'FETCH_USERLIST'\r\n};\r\nexport const postActionType = {\r\n    ADD_POSTLIST: 'ADD_POSTLIST',\r\n    UPDATE_POSTLIST: 'UPDATE_POSTLIST',\r\n    DELETE_POSTLIST:'DELETE_POSTLIST',\r\n    FETCH_POSTLIST:'FETCH_POSTLIST',\r\n    FETCH_POSTDETAILS:'FETCH_POSTDETAILS',\r\n    FETCH_COMMENTS:'FETCH_COMMENTS'\r\n};"],"sourceRoot":""}