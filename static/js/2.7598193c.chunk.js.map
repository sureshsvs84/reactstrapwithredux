{"version":3,"sources":["../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_getNative.js","../node_modules/process/browser.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","inverse","a","bool","color","string","body","outline","className","cssModule","object","innerRef","oneOfType","func","Card","props","Tag","attributes","Object","classes","createElement","ref","defaultProps","__webpack_exports__","CardBody","freeGlobal","freeSelf","self","root","Function","module","exports","isArray","Array","baseIsNative","getValue","key","value","undefined","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","webpackPolyfill","deprecate","paths","children","defineProperty","enumerable","get","l","Symbol","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","clear","entry","set","has","eq","nativeCreate","getNative","isKeyable","map","data","__data__","isSymbol","INFINITY","result","d","Doughnut","Pie","Line","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","target","source","hasOwnProperty","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","type","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","datasets","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","values","destroy","render","_props3","id","onClick","Component","isRequired","number","arrayOf","propName","componentName","controllers","display","position","_React$Component2","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","_this15","_ref6","_React$Component8","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","baseIsEqualDeep","isObjectLike","baseIsEqual","other","bitmask","customizer","stack","Map","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","arrayLikeKeys","baseKeys","isArrayLike","MAX_SAFE_INTEGER","reIsDeepProp","reIsPlainProp","test","baseGetTag","symbolTag","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","slice","pair","exec","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","uid","isNullOrUndef","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","types","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","asyncTag","funcTag","genTag","proxyTag","funcToString","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","baseIsArguments","objectProto","propertyIsEnumerable","isArguments","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","reIsUint","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","isFunction","isLength","srcValue","castPath","toKey","path","isKey","stringToPath","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas","predicate","Uint8Array","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","typedArrayTags","freeProcess","require","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","eachFunc","baseMatches","baseMatchesProperty","identity","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","isStrictComparable","hasIn","baseGet","memoizeCapped","rePropName","reEscapeChar","charCodeAt","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","baseToString","arrayMap","symbolToString","baseHasIn","hasPath","hasFunc","baseProperty","basePropertyDeep"],"mappings":"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","file":"static/js/2.7598193c.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;"],"sourceRoot":""}