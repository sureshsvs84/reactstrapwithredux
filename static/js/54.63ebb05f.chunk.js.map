{"version":3,"sources":["components/Base/SlideModal/slideModal.js","constants/en.js","utils/commonUtils.js","components/ApplicationComponent/userDataList/userDataList.js","appConfig.js","apiConfig.js","services/api/baseApiServices.js","components/ApplicationComponent/userDataList/userDataListActions.js","components/ApplicationComponent/userDataList/index.js","views/CRUD-Form/userList.js"],"names":["SlideModal","props","react_default","a","createElement","Modal","isOpen","isModalOpen","toggle","toggleModal","className","ModalHeader","ModalBody","children","ModalFooter","Button","color","onClick","localeConstants_en","commonConstants","appName","userList","pageTitle","isEmptyReturnDefault","data","type","result","isEmpty","isUndefined","value","obj","_","isArray","isString","length","key","has","localConstant","ModalFrom","Card","CardHeader","CardBody","FormGroup","Label","htmlFor","Input","id","placeholder","name","email","row","Col","xs","UserDataList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleEdit","console","log","setState","state","selectedRowData","handleDelete","updatedData","bind","assertThisInitialized","_this2","userDataList","slideModal","userDataList_ModalFrom","Row","sm","md","es","columns","Header","accessor","Cell","link","Fragment","original","defaultPageSize","actions","FetchUserDetails","Component","configuration","RequestPayload","arguments","undefined","headers","baseAPIConfig","userAPIConfig","axios","defaults","baseURL","common","get","post","put","getData","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","url","config","response","wrap","_context2","prev","next","param","then","status","error","sent","abrupt","stop","_x3","_x4","apply","payload","userListActionType","ADD_USERLIST","FETCH_USERLIST","AddUserDetails","dispatch","getstate","_ref","_callee","requestPayload","_context","catch","_x","_x2","withRouter","connect","rootApplicationReducer","UserDataListReducer","bindActionCreators","UserList","ApplicationComponent_userDataList"],"mappings":"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","file":"static/js/54.63ebb05f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Card, CardBody, CardHeader, Col, Modal, ModalBody, ModalFooter, ModalHeader, Row } from 'reactstrap';\r\n\r\n const SlideModal =(props)=>{\r\n    debugger;\r\n    return(\r\n        <Modal isOpen={props.isModalOpen} toggle={props.toggleModal}\r\n                       className={'modal-lg ' + props.className}>\r\n                  <ModalHeader toggle={props.toggleModal}>Modal title</ModalHeader>\r\n                  <ModalBody>\r\n                  {props.children}\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button color=\"primary\" onClick={props.toggleModal}>Do Something</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={props.toggleModal}>Cancel</Button>\r\n                  </ModalFooter>\r\n        </Modal>\r\n    )\r\n}\r\nexport default SlideModal;","export const localeConstants_en = {\r\n    commonConstants: {\r\n        appName: 'UI-Kit',\r\n    },\r\n    userList:{\r\n       pageTitle:'UserDataList'\r\n    }\r\n}","import {\r\n    countryCode\r\n} from '../constants/appConstants';\r\nimport {\r\n    localeConstants_en\r\n} from '../constants/en';\r\nimport _ from 'lodash';\r\n\r\nexport const getlocalizeData = () => {\r\n    const selectedLanguage = 'EN';\r\n    if (selectedLanguage === countryCode.ENGLISH) {\r\n        return localeConstants_en;\r\n    }\r\n    return localeConstants_en;\r\n};\r\n\r\n//method returns default value of type specified\r\n//in case type is not specified, array is considered as default\r\nexport const isEmptyReturnDefault = function (data, type) {\r\n    type = type ? type : 'array';\r\n    const result = isEmpty(data) || isUndefined(data);\r\n    if (result && type === 'number') {\r\n        return 0;\r\n    }\r\n    if (result && type === 'boolean') {\r\n        return false;\r\n    }\r\n    if (result && type === 'array') {\r\n        return [];\r\n    }\r\n    if (result && type === 'object') {\r\n        return {};\r\n    }\r\n\r\n    return data;\r\n};\r\n//Defines the type of the value, extended typeof\r\nconst whatis = function (val) {\r\n\r\n    if (val === undefined) {\r\n        return 'undefined';\r\n    }\r\n    if (val === null) {\r\n        return 'null';\r\n    }\r\n\r\n    let type = typeof val;\r\n\r\n    if (type === 'object') {\r\n        type = getClass(val)\r\n            .toLowerCase();\r\n    }\r\n\r\n    if (type === 'number') {\r\n        if (val.toString()\r\n            .indexOf('.') > 0) {\r\n            return 'float';\r\n        } else {\r\n            return 'integer';\r\n        }\r\n    }\r\n\r\n    return type;\r\n};\r\nconst getClass = function (val) {\r\n    return Object.prototype.toString.call(val)\r\n        .match(/^\\[object\\s(.*)\\]$/)[1];\r\n};\r\n// Returns if a value is a function\r\nexport const isFunction = function (value) {\r\n    return typeof value === 'function';\r\n};\r\n\r\nexport const isString = function (value) {\r\n    return typeof value === 'string';\r\n};\r\n\r\nexport const isUndefined = function (value) {\r\n    return typeof value === 'undefined';\r\n};\r\n\r\nexport const isEmptyOrUndefine = function (obj) {\r\n    if (obj === 'undefined' || obj === null || obj === \"\" || obj === \" \" || isEmpty(obj))\r\n        return true;\r\n\r\n    if (_.isArray(obj) || _.isString(obj))\r\n        return obj.length === 0;\r\n\r\n    for (const key in obj)\r\n        if (_.has(obj, key)) return false;\r\n\r\n    return true;\r\n};\r\nexport const isEmpty = function (obj) {\r\n    if (obj === null) return true;\r\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\r\n    for (const key in obj)\r\n        if (_.has(obj, key)) return false;\r\n    return true;\r\n};\r\nexport const mergeobjects = (dest, src) => {\r\n    return _.merge({}, dest, src);\r\n};\r\n\r\nexport const truncate = (text, length) => {\r\n    return _.truncate(text, {\r\n        length: length ? length : 50,\r\n        separator: ' '\r\n    });\r\n};\r\nexport const compareObjects = function (a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    for (const i in a) {\r\n        if (b.hasOwnProperty(i)) {\r\n            if (!equal(a[i], b[i])) return false;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (const i in b) {\r\n        if (!a.hasOwnProperty(i)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n\r\nconst compareArrays = function (a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < a.length; i++) {\r\n        if (!equal(a[i], b[i])) return false;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nconst _equal = {};\r\n_equal.array = compareArrays;\r\n_equal.object = compareObjects;\r\n_equal.date = function (a, b) {\r\n    return a.getTime() === b.getTime();\r\n};\r\n_equal.regexp = function (a, b) {\r\n    return a.toString() === b.toString();\r\n};\r\n\r\nexport const equal = function (a, b) {\r\n    if (a !== b) {\r\n        const atype = whatis(a),\r\n            btype = whatis(b);\r\n\r\n        if (atype === btype) {\r\n            return _equal.hasOwnProperty(atype) ? _equal[atype](a, b) : a === b;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n};\r\nexport const numberFormat = (number) => {\r\n    if (number === \"0\") {\r\n        return number;\r\n    }\r\n    else {\r\n        const trimmed = number.replace(/^0+/, '');\r\n        const formatedNumber = trimmed.replace(/[^\\d.-]/g, '');\r\n        return formatedNumber;\r\n    }\r\n};\r\n//Remove Array Duplicates\r\nexport const RemoveDuplicateArray = (params,key) => {\r\n    const isObj = _.unionBy(params,key);\r\n    return isObj;\r\n};\r\n//Is Array \r\nexport const isArray = (params) => {\r\n    const isArr = _.isArray(params);\r\n    return isArr;\r\n};\r\n\r\n//Find Object in Array\r\nexport const findObject = (array, key) => {\r\n    const obj = _.find(array, key);\r\n    return obj;\r\n};\r\n\r\n//Map Array Object \r\nexport const mapArrayObject = (array, key) => {\r\n    const mapValue = _.map(array, key);\r\n    return mapValue;\r\n};\r\n\r\n//To convert Objects to Array of Objects\r\nexport const convertObjectToArray = (obj) => {\r\n    const arr = _.values(obj);\r\n    return arr;\r\n};\r\n\r\n//To add a new key-value pair to an array of objects\r\nexport const addElementToArray = (data) => {\r\n    const arr = data.map(res => {\r\n        return _.extend({}, res, { 'value': res.name, 'label': res.name });\r\n    });\r\n    return arr;\r\n};\r\n//To add a new key-value pair to an array of objects\r\nexport const addElementToArrayParam = (data,paramValue,paramName) => {\r\n    const arr = data.map(res => {\r\n        return _.extend({}, res, { 'value': res[paramValue], 'label': res[paramName] });\r\n    });\r\n    return arr;\r\n};\r\n\r\n//Convert Array to Object \r\nexport const convertArrayToObject = (params, name) => {\r\n    const arrayObj = _.keyBy(params, name);\r\n    return arrayObj;\r\n};\r\n\r\nconst inputChangeHandler = (e) => {\r\n    if (e.target.type === \"number\") {\r\n        if (e.target.value !== \"0\" && e.target.value !== \"0.00\") {\r\n            e.target.value = numberFormat(e.target.value);\r\n        }\r\n    }\r\n    const fieldValue = e.target[e.target.type === \"checkbox\" ? \"checked\" : \"value\"];\r\n    const fieldName = e.target.name;\r\n    const result = {\r\n        value: fieldValue,\r\n        name: fieldName\r\n    };\r\n    return result;\r\n};\r\n\r\nexport const formInputChangeHandler = (event) => {\r\n    const result = inputChangeHandler(event);\r\n    return result;\r\n};\r\n\r\nexport const captalize = (word) => {\r\n    if (word !== undefined) {\r\n        word = word.toLowerCase()\r\n            .split(' ')\r\n            .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\r\n            .join(' ');\r\n        return word;\r\n    }\r\n};\r\n\r\n//RegExp validator\r\nexport const customRegExValidator = (pattern, modifiers, value) => {\r\n    const regex = new RegExp(pattern, modifiers);\r\n    return value && !(regex.test(value));\r\n};\r\n/** Parse query param */\r\nexport const parseQueryParam = (param) => {\r\n    let parsedParam = param.substring(1);\r\n    parsedParam = JSON.parse('{\"' + decodeURI(parsedParam.replace(/&/g, \"\\\",\\\"\").replace(/=/g, \"\\\":\\\"\")) + '\"}');\r\n    return parsedParam;\r\n};\r\n//DeepCopy from Array to Array\r\nexport function deepCopy(obj) {\r\n    if(typeof obj !== 'object' || obj === null) {\r\n        return obj;\r\n    }\r\n     \r\n    if(obj instanceof Array) {\r\n        return obj.reduce((arr, item, i) => {\r\n            arr[i] = deepCopy(item);\r\n            return arr;\r\n        }, []);\r\n    }\r\n\r\n    if(obj instanceof Object) {\r\n        return Object.keys(obj).reduce((newObj, key) => {\r\n            newObj[key] = deepCopy(obj[key]);\r\n            return newObj;\r\n        }, {});\r\n    };\r\n}","import React, { Component } from 'react';\r\nimport { Badge, Card, CardBody, CardFooter, CardHeader, Col, Row, Collapse, Fade,FormGroup,Label,Input } from 'reactstrap';\r\nimport SlideModal from '../../Base/SlideModal/slideModal.js';\r\nimport { getlocalizeData } from '../../../utils/commonUtils';\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nconst localConstant = getlocalizeData();\r\nconst ModalFrom =(props)=>{\r\n  debugger;\r\n  return(\r\n    <Card>\r\n              <CardHeader>\r\n                <strong>Company</strong>\r\n                <small> Form</small>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"company\">Company</Label>\r\n                  <Input type=\"text\" id=\"company\" placeholder=\"Enter your company name\" value={props.name}/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"vat\">VAT</Label>\r\n                  <Input type=\"text\" id=\"vat\" placeholder=\"DE1234567890\" value={props.email} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"street\">Street</Label>\r\n                  <Input type=\"text\" id=\"street\" placeholder=\"Enter street name\" />\r\n                </FormGroup>\r\n                <FormGroup row className=\"my-0\">\r\n                  <Col xs=\"8\">\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"city\">City</Label>\r\n                      <Input type=\"text\" id=\"city\" placeholder=\"Enter your city\" />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col xs=\"4\">\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"postal-code\">Postal Code</Label>\r\n                      <Input type=\"text\" id=\"postal-code\" placeholder=\"Postal Code\" />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"country\">Country</Label>\r\n                  <Input type=\"text\" id=\"country\" placeholder=\"Country name\" />\r\n                </FormGroup>\r\n              </CardBody>\r\n            </Card>\r\n  )\r\n}\r\n\r\nclass UserDataList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          isModalOpen:false\r\n        };\r\n        this.updatedData = {};\r\n        this.selectedRowData={}; \r\n        this.handleEdit = this.handleEdit.bind(this); \r\n        this.handleDelete = this.handleDelete.bind(this);     \r\n    }\r\n    //Onclick Handler    \r\n    handleEdit=(data)=>{ \r\n      debugger;  \r\n      console.log(data);\r\n      this.setState({isModalOpen:!this.state.isModalOpen});\r\n      this.selectedRowData = data;\r\n    }\r\n    handleDelete=(data)=>{\r\n      console.log(data);\r\n    }\r\n    render() {       \r\n        const { userDataList } = this.props;\r\n        return (           \r\n        <div className=\"animated fadeIn\">\r\n          <SlideModal isModalOpen={this.state.isModalOpen} toggleModal={()=>this.handleEdit()}>\r\n          <ModalFrom {...this.selectedRowData}/>\r\n          </SlideModal>\r\n         <Row>\r\n          <Col xs=\"12\" sm=\"12\" md=\"12\">\r\n            <Card>\r\n              <CardHeader>\r\n                {localConstant.userList.pageTitle}\r\n              </CardHeader>\r\n               <CardBody>\r\n\r\n             <ReactTable\r\n                data={userDataList}\r\n                columns={[\r\n                    {\r\n                      Header: \"First Name\",\r\n                      accessor: \"name\",\r\n                     \r\n                    },\r\n                    {\r\n                      Header: \"User\",\r\n                      accessor: \"username\",\r\n                     \r\n                    },\r\n                    {\r\n                      Header: \"Email\",\r\n                      accessor: \"email\",\r\n                     \r\n                    },\r\n                    {\r\n                      Header: \"Phone\",\r\n                      accessor: \"phone\",\r\n                     \r\n                    },\r\n                    {\r\n                      Header: \"WebSite\",\r\n                      accessor: \"website\",\r\n                     \r\n                    },\r\n                    {\r\n                    Header:'Action',\r\n                    Cell:link =>(<><button onClick={()=>this.handleEdit(link.original)}>Edit</button> <button onClick={()=>this.handleEdit(link.original)}>Delete</button></>)\r\n                    }\r\n                    \r\n                  ]}\r\n                  defaultPageSize={10}\r\n        />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          </Row>\r\n          </div>\r\n        );\r\n    }\r\n    componentDidMount(){\r\n      this.props.actions.FetchUserDetails();\r\n    }\r\n}\r\nexport default UserDataList;","export const configuration={\r\n    apiBaseUrl:'https://jsonplaceholder.typicode.com',\r\n    version:'1.0.0'\r\n}","import { configuration } from \"./appConfig\";\r\n\r\nexport function RequestPayload(data = {}, headers = {}) {\r\n    this.data = data;\r\n    this.headers = headers;\r\n}\r\nexport const baseAPIConfig={\r\n    baseUrl:configuration.apiBaseUrl\r\n}\r\nexport const userAPIConfig={\r\n    userlist:'/users'\r\n}","import axios from 'axios';\r\nimport { configuration } from '../../appConfig';\r\n\r\naxios.defaults.baseURL = configuration.apiBaseUrl;\r\n//axios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\naxios.defaults.headers.common['Access-Control-Allow-Origin']= '*';\r\naxios.defaults.headers.common['Access-Control-Allow-Methods']='GET, PUT, POST, DELETE, OPTIONS';\r\naxios.defaults.headers.common['Access-Control-Allow-Headers']='Content-Type';\r\naxios.defaults.headers.get['Content-Type'] = 'application/json';\r\n\r\naxios.defaults.headers.post['Content-Type'] = 'application/json';\r\naxios.defaults.headers.post['Accept'] = 'application/json';\r\naxios.defaults.headers.post['Acces-Control-Allow-Origin'] = '*';\r\n\r\naxios.defaults.headers.put['Content-Type'] = 'application/json';\r\naxios.defaults.headers.put['Accept'] = 'application/json';\r\naxios.defaults.headers.put['Acces-Control-Allow-Origin'] = '*';\r\n//Post Method\r\nconst param = {}\r\n/**\r\n* @param {*} url \r\n* @param {*} config \r\n*/\r\nexport const postData = async (url, config) => {\r\n    axios.defaults.headers.post['Content-Type'] = 'application/json';\r\n    axios.defaults.headers.post['Accept'] = 'application/json';\r\n    axios.defaults.headers.post['Acces-Control-Allow-Origin'] = '*';\r\n    axios.defaults.headers.post['Content-Type'] ='application/x-www-form-urlencoded';\r\n    const response = await axios.post(url, config.data);\r\n    if (response && response.status === 200) {\r\n        return response.data;\r\n    }\r\n    return response;\r\n}\r\n/**\r\n* @param {*} url \r\n* @param {*} config \r\n*/\r\nexport const getData = async (url, config) => {\r\n    const response = await axios.get(url, { param: config.data })\r\n        .then((response) => {\r\n            if (response && response.status === 200) {\r\n                console.log(response);\r\n                return response.data;\r\n            }\r\n\r\n        }, (error) => {\r\n            console.log(error);\r\n            return error;\r\n        });\r\n    return response;\r\n}\r\n\r\nexport const CreateData = async (url, config) => {\r\n    axios.defaults.headers.post['Content-Type'] = 'application/json';\r\n    axios.defaults.headers.post['Accept'] = 'application/json';\r\n    axios.defaults.headers.post['Acces-Control-Allow-Origin'] = '*';\r\n    axios.defaults.headers.put['Content-Type'] = 'application/json';\r\n    axios.defaults.headers.put['Accept'] = 'application/json';\r\n    axios.defaults.headers.put['Acces-Control-Allow-Origin'] = '*';\r\n    const response = await axios.put(url, config.data);\r\n    if (response.status === 200 && response.statusText === 'OK') {\r\n        return response.data;\r\n    }\r\n    return response;\r\n};","import { userListActionType } from '../../../constants/actionType';\r\nimport { baseAPIConfig,userAPIConfig,RequestPayload } from '../../../apiConfig';\r\nimport { getData } from '../../../services/api/baseApiServices';\r\nimport { async } from 'q';\r\n\r\nconst actions = {\r\n    AddUserDetails: (payload) => (\r\n        {\r\n            type: userListActionType.ADD_USERLIST,\r\n            data: payload\r\n        }\r\n    ),\r\n    DeleteUserDetails: (payload) => (\r\n        {\r\n            type: userListActionType.UPDATE_USERLIST,\r\n            data: payload\r\n        }\r\n    ),\r\n    UpdateUserDetails: (payload) => (\r\n        {\r\n            type: userListActionType.DELETE_USERLIST,\r\n            data: payload\r\n        }\r\n    ),\r\n    FetchUserDetails: (payload) => (\r\n        {\r\n            type: userListActionType.FETCH_USERLIST,\r\n            data: payload\r\n        }\r\n    )\r\n  \r\n};\r\n\r\nexport const AddUserDetails = (data) => (dispatch, getstate) => {\r\n    dispatch(actions.AddUserDetails(data));\r\n};\r\n\r\nexport const FetchUserDetails = () => async (dispatch, getstate) => {\r\n    const url = baseAPIConfig.baseUrl+userAPIConfig.userlist;\r\n    const params={};\r\n    const requestPayload = new RequestPayload(params);\r\n    const response = await getData(url, requestPayload).catch(error => {\r\n         console.log('data error');\r\n        });\r\n        if(response){\r\n            dispatch(actions.FetchUserDetails(response));          \r\n        }\r\n};\r\n\r\n","import UserDataList from './userDataList';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { isEmptyReturnDefault } from '../../../utils/commonUtils';\r\nimport { AddUserDetails,FetchUserDetails } from './userDataListActions';\r\nconst mapStateToProps = (state, props) => { \r\n    return {\r\n     userDataList:isEmptyReturnDefault(state.rootApplicationReducer.UserDataListReducer.userDataList),       \r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        actions: bindActionCreators(\r\n            {\r\n                AddUserDetails,\r\n                FetchUserDetails\r\n            },\r\n            dispatch\r\n        ),\r\n    };\r\n};\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(UserDataList));","import React, { Component } from 'react'; \r\nimport UserDataList from '../../components/ApplicationComponent/userDataList';\r\n\r\nclass UserList extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <UserDataList />\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserList;"],"sourceRoot":""}